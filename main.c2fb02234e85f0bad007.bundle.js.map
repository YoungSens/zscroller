{"version":3,"file":"main.c2fb02234e85f0bad007.bundle.js","sources":["webpack:///./src/utils.js"],"sourcesContent":["let win = typeof window !== 'undefined' ? window : undefined;\n\nif (!win) {\n  win = typeof global !== 'undefined' ? global : {};\n}\nconst VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n\nfunction prefixed(obj, property) {\n  let prefix;\n  let prop;\n  let camelProp = property[0].toUpperCase() + property.slice(1);\n\n  let i = 0;\n  while (i < VENDOR_PREFIXES.length) {\n    prefix = VENDOR_PREFIXES[i];\n    prop = prefix ? prefix + camelProp : property;\n\n    if (prop in obj) {\n      return prop;\n    }\n    i++;\n  }\n  return undefined;\n}\n\nconst SUPPORT_POINTER_EVENTS = prefixed(win, 'PointerEvent') !== undefined;\n\nexport const isTouch = 'ontouchstart' in win;\n\nexport const TOUCH_START_EVENT = SUPPORT_POINTER_EVENTS\n  ? 'pointerdown'\n  : 'touchstart';\n\nexport const TOUCH_CANCEL_EVENT = SUPPORT_POINTER_EVENTS\n  ? 'pointercancel'\n  : 'touchcancel';\n\nexport const TOUCH_END_EVENT = SUPPORT_POINTER_EVENTS\n  ? 'pointerup'\n  : 'touchend';\n\nexport function setTransform(nodeStyle, value) {\n  nodeStyle.transform = value;\n  nodeStyle.webkitTransform = value;\n  nodeStyle.MozTransform = value;\n}\n\nlet supportsPassive = false;\ntry {\n  const opts = Object.defineProperty({}, 'passive', {\n    get() {\n      supportsPassive = true;\n    },\n  });\n  win.addEventListener('test', null, opts);\n} catch (e) {\n  // empty\n}\n\nexport function preventDefault(e) {\n  if (!supportsPassive) {\n    e.preventDefault();\n  }\n}\n\nconst isWebView =\n  typeof navigator !== 'undefined' &&\n  /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent);\n\nexport function iOSWebViewFix(e, touchendFn) {\n  // https://github.com/ant-design/ant-design-mobile/issues/573#issuecomment-339560829\n  // iOS UIWebView issue, It seems no problem in WKWebView\n  if (\n    isWebView &&\n    e.type.toLowerCase() === 'touchend' &&\n    e.changedTouches[0].clientY < 0\n  ) {\n    touchendFn(new Event('touchend') || e);\n  }\n}\n\nexport const willNotPreventDefault = supportsPassive\n  ? { passive: true }\n  : false;\n\nexport function addEventListener(\n  target,\n  type,\n  fn,\n  _options = willNotPreventDefault,\n) {\n  target.addEventListener(type, fn, _options);\n  return () => {\n    target.removeEventListener(type, fn, _options);\n  };\n}\n\n\n\nlet globalBrowser;\n\nfunction getBrowser() {\n  if (globalBrowser) {\n    return globalBrowser;\n  }\n  const ua = navigator.userAgent.toLowerCase();\n  var match = /(chrome)[ \\/]([\\w.]+)/.exec(ua) || /(webkit)[ \\/]([\\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) || [];\n  const matched = {\n    browser: match[1] || '',\n    version: match[2] || '0'\n  };\n  globalBrowser = {};\n  if (matched.browser) {\n    globalBrowser[matched.browser] = true;\n    globalBrowser.version = matched.version;\n  }\n\n  if (ua.indexOf('macintosh') !== -1) {\n    globalBrowser.mac = true;\n  } else if (ua.indexOf('windows') !== -1) {\n    globalBrowser.win = true;\n  }\n\n  if (globalBrowser.chrome) {\n    globalBrowser.webkit = true;\n  } else if (globalBrowser.webkit) {\n    globalBrowser.safari = true;\n  }\n  return globalBrowser;\n}\n\nfunction getRatio() {\n  return getBrowser().safari ? 4 : 40;\n}\n\nfunction toDeltaInt(delta) {\n  if (getBrowser().win) {\n    delta /= 4;\n  }\n  return (delta >= 0 ? 1 : -1) * Math.floor(Math.abs(delta));\n}\n\nexport function deltaX(event) {\n  let delta = 'deltaX' in event\n    ? event.deltaX\n    : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n    'wheelDeltaX' in event\n      ? -event.wheelDeltaX\n      : 0;\n  return toDeltaInt(delta);\n}\n\nexport function deltaY(event) {\n  let delta = 'deltaY' in event\n    ? event.deltaY\n    : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n    'wheelDeltaY' in event\n      ? -event.wheelDeltaY\n      : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n      'wheelDelta' in event\n        ? -event.wheelDelta\n        : 0;\n  return toDeltaInt(delta);\n}"],"mappings":"AAAA","sourceRoot":""}